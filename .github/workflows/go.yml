name: build
on: [push, pull_request]
jobs:
  build_linux:
    strategy:
      matrix:
        go-version: [1.16.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Build dependencies
        run: |
          sudo apt-get update
          sudo apt-get --no-install-recommends install build-essential libgles2 libgles2-mesa-dev libglib2.0-dev libxkbcommon-dev libxkbcommon-x11-dev libglu1-mesa-dev libxcursor-dev libwayland-dev libx11-xcb-dev libvulkan-dev

      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build for linux
        run: go build

      - name: Upload binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: catchat
          path: ./catchat

  build_windows:
    strategy:
      matrix:
        go-version: [1.16.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2


      - name: Build for windows
        run: GOOS=windows go build -ldflags="-H windowsgui"

      - name: Upload binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: catchat.exe
          path: ./catchat.exe

  build_osx:
    strategy:
      matrix:
        go-version: [1.16.x]
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build for OSX
        run: go build

      - name: Upload binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: catchat-macos
          path: ./catchat

  build_android:
    strategy:
      matrix:
        go-version: [1.16.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build android_build docker image
        run: |
          docker build --no-cache -t katzenpost/android_build -f Dockerfile.android .

      - name: Build catchat apk
        run: |
          docker run -v "$(pwd)":/go/build/ katzenpost/android_build gogio -arch arm64,amd64 -x -target android -appid org.mixnetworks.catchat -version 1 .

      - name: Upload binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: catchat.apk
          path: ./catchat.apk

  create_release:
    runs-on: ubuntu-latest
    needs: [build_linux, build_windows, build_osx, build_android]
    steps:
      - name: Download catchat linux
        uses: actions/download-artifact@v2
        with:
          name: catchat

      - name: Download catchat windows
        uses: actions/download-artifact@v2
        with:
          name: catchat.exe

      - name: Download catchat android
        uses: actions/download-artifact@v2
        with:
          name: catchat.apk

      - name: Download catchat android
        uses: actions/download-artifact@v2
        with:
          name: catchat-macos

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: test_${{ github.sha}}
          release_name: Testing ${{ github.sha}}
          prerelease: true

      - name: Upload catchat linux x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./catchat
          asset_name: catchat-linux
          asset_content_type: application/binary

      - name: Upload catchat macos x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./catchat-macos
          asset_name: catchat-macos
          asset_content_type: application/binary

      - name: Upload catchat windows x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./catchat.exe
          asset_name: catchat.exe
          asset_content_type: application/binary

      - name: Upload catchat android apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./catchat.apk
          asset_name: catchat.apk
          asset_content_type: application/binary
